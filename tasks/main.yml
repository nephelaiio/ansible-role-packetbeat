---
- name: configure elastic repo
  include_role:
    name: nephelaiio.elastic_repo
  when: packetbeat_repo_manage | bool

- name: inspect packages
  package_facts:
    manager: auto

- block:

    - block:

        - name: install yum version lock support
          package:
            name: yum-plugin-versionlock

        - name: disable yum package lock
          community.general.yum_versionlock:
            name: "{{ item }}"
            state: absent
          loop: "{{ [packetbeat_package_names] | flatten }}"
          when: item in packages
          tags:
            - skip_ansible_lint

      when: (ansible_os_family | lower) == 'redhat'

    - name: disable apt package lock
      dpkg_selections:
        name: "{{ item }}"
        selection: install
      loop: "{{ [packetbeat_package_names] | flatten }}"
      when:
        - (ansible_os_family | lower) == 'debian'
        - item in packages

  when: packetbeat_package_hold | bool

- name: install packetbeat elastic packages
  package:
    name: "{{ packetbeat_package_names }}"
    state: "{{ packetbeat_package_state }}"

- block:

    - block:

        - name: enable apt package hold
          dpkg_selections:
            name: "{{ item }}"
            selection: hold
          loop: "{{ [packetbeat_package_names] | flatten }}"
          when: (ansible_os_family | lower) == 'debian'

        - name: enable yum package lock
          community.general.yum_versionlock:
            name: "{{ item }}"
            state: present
          loop: "{{ [packetbeat_package_names] | flatten }}"
          when: (ansible_os_family | lower) == 'redhat'
          tags:
            - skip_ansible_lint

      when: packetbeat_package_hold | bool

    - name: configure packetbeat
      copy:
        content: |
          # Ansible managed

          {{ packetbeat_conf | to_nice_yaml(indent=2) }}
        dest: "{{ packetbeat_conf_path }}"
      notify: restart packetbeat
      when:
        - packetbeat_conf is defined
        - packetbeat_conf_manage | bool

    - name: manage packetbeat services
      service:
        name: "{{ packetbeat_service_name }}"
        state: "{{ packetbeat_service_status }}"
        enabled: "{{ packetbeat_service_enabled }}"

  when: packetbeat_package_state in ['present', 'latest']
